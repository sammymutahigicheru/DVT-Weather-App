plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id("de.mannodermaus.android-junit5")
}

android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "11"
    }
    sourceSets.each {
        it.java.srcDirs += "src/$it.name/kotlin"
    }

    testOptions {
        junitPlatform {
            filters {
                engines {
                    include 'spek2'
                }
            }
            jacocoOptions {
                // here goes all jacoco config, for example
                html.enabled = true
                xml.enabled = false
                csv.enabled = false
            }
        }
        unitTests.all {
            testLogging.events = ["passed", "skipped", "failed"]
        }
    }


}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.30'
    api("com.squareup.moshi:moshi-kotlin:1.12.0")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.12.0")
    api("com.squareup.retrofit2:converter-moshi:2.8.1")
    implementation 'com.google.code.gson:gson:2.8.8'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'

    //di
    implementation("org.koin:koin-android:2.1.5")
    implementation("org.koin:koin-android-scope:2.1.5")

    //Threading
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2")

    //network
    api("com.squareup.retrofit2:retrofit:2.9.0")
    api("com.squareup.okhttp3:okhttp:5.0.0-alpha.2")
    api("com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2")

    testImplementation 'junit:junit:4.13.2'
    testImplementation("com.google.truth:truth:1.1.3")
    testImplementation("com.squareup.okhttp3:mockwebserver:5.0.0-alpha.2")
    // spek
    testImplementation("org.spekframework.spek2:spek-dsl-jvm:2.0.15")
    testImplementation("org.spekframework.spek2:spek-runner-junit5:2.0.15")

    // spek requires kotlin-reflect, omit when already in classpath
    testImplementation("org.jetbrains.kotlin:kotlin-reflect:1.5.21")

    testImplementation("io.mockk:mockk:1.12.0")
    testImplementation("io.mockk:mockk-agent-jvm:1.12.0") {
        because(
                "This dependency resolves the NoClassDefFoundError when using spek " +
                        "https://github.com/mockk/mockk/issues/605," +
                        "https://github.com/spekframework/spek/issues/968"
        )
    }

    // JUnit5 dependencies
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.1")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.6.0") {
        because(
                "This allows us to run JUnit4 tests as well as Spek tests (JUnit5) from the command line." +
                        "Found in: https://github.com/spekframework/spek/issues/232#issuecomment-610732158"
        )
    }

}